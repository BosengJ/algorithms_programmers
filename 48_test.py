'''문제 설명
직사각형을 만드는 데 필요한 4개의 점 중 3개의 좌표가 주어질 때, 나머지 한 점의 좌표를 구하려고 합니다. 
점 3개의 좌표가 들어있는 배열 v가 매개변수로 주어질 때, 
직사각형을 만드는 데 필요한 나머지 한 점의 좌표를 return 하도록 solution 함수를 완성해주세요. 
단, 직사각형의 각 변은 x축, y축에 평행하며, 반드시 직사각형을 만들 수 있는 경우만 입력으로 주어집니다.

제한사항
v는 세 점의 좌표가 들어있는 2차원 배열입니다.
v의 각 원소는 점의 좌표를 나타내며, 좌표는 [x축 좌표, y축 좌표] 순으로 주어집니다.
좌표값은 1 이상 10억 이하의 자연수입니다.
직사각형을 만드는 데 필요한 나머지 한 점의 좌표를 [x축 좌표, y축 좌표] 순으로 담아 return 해주세요.

입출력 예

v	result
[[1, 4], [3, 4], [3, 10]]	[1, 10]
[[1, 1], [2, 2], [1, 2]]	[2, 1]

입출력 예 설명

입출력 예 #1
세 점이 [1, 4], [3, 4], [3, 10] 위치에 있을 때, [1, 10]에 점이 위치하면 직사각형이 됩니다.

입출력 예 #2
세 점이 [1, 1], [2, 2], [1, 2] 위치에 있을 때, [2, 1]에 점이 위치하면 직사각형이 됩니다.'''



'''직사각형의 좌표값 x값 2개 ,y값 2개만 가질 수밖에 없는 특징을 이용하여 
중복된 값은 제외하고 중복되지 않는 값 1개를 찾아낸다.'''

'''직사각형의 좌표값 x값 2개 ,y값 2개만 가질 수밖에 없는 특징을 이용하여 
중복된 값은 제외하고 중복되지 않는 값 1개를 찾아낸다.'''

def searchLocation(li):   
    tmp = []
    for num in li:
        if num in tmp:
            tmp.remove(num)    # 중복된 값은 빼버린다
        else:
            tmp.append(num)    # 중복되지 않으면 더한다
    return tmp[0]              # 남아있는 유일한 1개의 값이 원하는 좌표값이다

def solution(v):
    x_axis,y_axis = [],[]      # x값, y값 가진 리스트를 따로 생성한다
    for x,y in v:
        x_axis.append(x)
        y_axis.append(y)
    x = searchLocation(x_axis) # 만들어준 함수를 이용하여 원하는 좌표값을 구한다
    y = searchLocation(y_axis)
    answer = [x,y]
    return answer